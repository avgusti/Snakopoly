/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package my.monopoly;

public final class R {
    public static final class array {
        public static final int playerscountlist=0x7f080000;
    }
    public static final class attr {
        /** 
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
         */
        public static final int alignmentMode=0x7f010004;
        /**  The maximum number of columns to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnCount=0x7f010002;
        /** 
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnOrderPreserved=0x7f010006;
        /** 
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_column=0x7f010009;
        /** 
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_columnSpan=0x7f01000a;
        /** 
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int layout_gravity=0x7f01000b;
        /**  END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_row=0x7f010007;
        /** 
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_rowSpan=0x7f010008;
        /** 
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
         */
        public static final int orientation=0x7f010000;
        /**  The maximum number of rows to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowCount=0x7f010001;
        /** 
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowOrderPreserved=0x7f010005;
        /** 
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useDefaultMargins=0x7f010003;
    }
    public static final class color {
        public static final int player1=0x7f060000;
        public static final int player2=0x7f060001;
        public static final int player3=0x7f060002;
        public static final int player4=0x7f060003;
        public static final int set1=0x7f060004;
        public static final int set10=0x7f06000d;
        public static final int set2=0x7f060005;
        public static final int set3=0x7f060006;
        public static final int set4=0x7f060007;
        public static final int set5=0x7f060008;
        public static final int set6=0x7f060009;
        public static final int set7=0x7f06000a;
        public static final int set8=0x7f06000b;
        public static final int set9=0x7f06000c;
    }
    public static final class dimen {
        /**  The default gap between components in a layout. 
         */
        public static final int default_gap=0x7f050000;
    }
    public static final class drawable {
        public static final int board=0x7f020000;
        public static final int cell_airport=0x7f020001;
        public static final int cell_bar=0x7f020002;
        public static final int cell_bookstore=0x7f020003;
        public static final int cell_bus=0x7f020004;
        public static final int cell_car=0x7f020005;
        public static final int cell_card=0x7f020006;
        public static final int cell_cellphone=0x7f020007;
        public static final int cell_chance=0x7f020008;
        public static final int cell_computer=0x7f020009;
        public static final int cell_copycenter=0x7f02000a;
        public static final int cell_electricity=0x7f02000b;
        public static final int cell_er=0x7f02000c;
        public static final int cell_free=0x7f02000d;
        public static final int cell_game=0x7f02000e;
        public static final int cell_go=0x7f02000f;
        public static final int cell_gojail=0x7f020010;
        public static final int cell_golf=0x7f020011;
        public static final int cell_gym=0x7f020012;
        public static final int cell_hostel=0x7f020013;
        public static final int cell_hotel=0x7f020014;
        public static final int cell_motel=0x7f020015;
        public static final int cell_motorcicle=0x7f020016;
        public static final int cell_movie=0x7f020017;
        public static final int cell_nr=0x7f020018;
        public static final int cell_pizza=0x7f020019;
        public static final int cell_pool=0x7f02001a;
        public static final int cell_press=0x7f02001b;
        public static final int cell_prison=0x7f02001c;
        public static final int cell_radio=0x7f02001d;
        public static final int cell_railroad=0x7f02001e;
        public static final int cell_restaurant=0x7f02001f;
        public static final int cell_sr=0x7f020020;
        public static final int cell_tax=0x7f020021;
        public static final int cell_track=0x7f020022;
        public static final int cell_tv=0x7f020023;
        public static final int cell_water=0x7f020024;
        public static final int cell_wr=0x7f020025;
        public static final int check=0x7f020026;
        public static final int dice1=0x7f020027;
        public static final int dice2=0x7f020028;
        public static final int dice3=0x7f020029;
        public static final int dice4=0x7f02002a;
        public static final int dice5=0x7f02002b;
        public static final int dice6=0x7f02002c;
        public static final int f404=0x7f02002d;
        public static final int ic_launcher=0x7f02002e;
        public static final int minus=0x7f02002f;
        public static final int mortgage_get=0x7f020030;
        public static final int mortgage_icon=0x7f020031;
        public static final int mortgage_pay=0x7f020032;
        public static final int none=0x7f020033;
        public static final int p1=0x7f020034;
        public static final int p1f=0x7f020035;
        public static final int p2=0x7f020036;
        public static final int p2f=0x7f020037;
        public static final int p3=0x7f020038;
        public static final int p3f=0x7f020039;
        public static final int p4=0x7f02003a;
        public static final int p4f=0x7f02003b;
        public static final int plus=0x7f02003c;
        public static final int prison=0x7f02003d;
        public static final int set0=0x7f02003e;
        public static final int set1=0x7f02003f;
        public static final int set10=0x7f020040;
        public static final int set2=0x7f020041;
        public static final int set3=0x7f020042;
        public static final int set4=0x7f020043;
        public static final int set5=0x7f020044;
        public static final int set6=0x7f020045;
        public static final int set7=0x7f020046;
        public static final int set8=0x7f020047;
        public static final int set9=0x7f020048;
        public static final int st1=0x7f020049;
        public static final int st2=0x7f02004a;
        public static final int st3=0x7f02004b;
        public static final int st4=0x7f02004c;
        public static final int st5=0x7f02004d;
        public static final int starsh1=0x7f02004e;
        public static final int starsh2=0x7f02004f;
        public static final int starsh3=0x7f020050;
        public static final int starsh4=0x7f020051;
        public static final int starsh5=0x7f020052;
        public static final int starsv1=0x7f020053;
        public static final int starsv2=0x7f020054;
        public static final int starsv3=0x7f020055;
        public static final int starsv4=0x7f020056;
        public static final int starsv5=0x7f020057;
    }
    public static final class id {
        public static final int CurrPlayer=0x7f04001b;
        public static final int LinearLayout1=0x7f040071;
        public static final int addPrisonCard=0x7f040049;
        public static final int alignBounds=0x7f040002;
        public static final int alignMargins=0x7f040003;
        public static final int animate=0x7f04005e;
        public static final int board=0x7f040013;
        public static final int bottom=0x7f040005;
        public static final int bottonsHolderBottom=0x7f04006d;
        public static final int buttonsHolderTop=0x7f04001f;
        public static final int buyButton=0x7f040028;
        public static final int cardsnum=0x7f040042;
        public static final int cardstext=0x7f040044;
        public static final int cellInfoHolder=0x7f040029;
        public static final int cellView=0x7f04002a;
        public static final int cellicon=0x7f040025;
        public static final int cellinfoLayout=0x7f040024;
        public static final int center=0x7f04000c;
        public static final int center_horizontal=0x7f04000a;
        public static final int center_vertical=0x7f040008;
        public static final int clip_horizontal=0x7f04000f;
        public static final int clip_vertical=0x7f04000e;
        public static final int close=0x7f040020;
        public static final int computer=0x7f04005f;
        public static final int controls=0x7f040014;
        public static final int dice1=0x7f04001a;
        public static final int dice2=0x7f040019;
        public static final int dices=0x7f040018;
        public static final int end=0x7f040011;
        public static final int exit=0x7f040055;
        public static final int exitprison=0x7f040046;
        public static final int fill=0x7f04000d;
        public static final int fill_horizontal=0x7f04000b;
        public static final int fill_vertical=0x7f040009;
        public static final int go=0x7f04001c;
        public static final int gobutton=0x7f040048;
        public static final int godialogroot=0x7f04001e;
        public static final int gotext=0x7f040047;
        public static final int help=0x7f040054;
        public static final int horizontal=0x7f040000;
        public static final int human=0x7f040061;
        public static final int infoPanelsHolder=0x7f04004b;
        public static final int info_BuyLable=0x7f04003a;
        public static final int info_CellName=0x7f04002b;
        public static final int info_CurrentRentLable=0x7f04002c;
        public static final int info_RenLable=0x7f04003b;
        public static final int info_buildStar1=0x7f040035;
        public static final int info_buildStar2=0x7f040036;
        public static final int info_buildStar3=0x7f040037;
        public static final int info_buildStar4=0x7f040038;
        public static final int info_buildStar5=0x7f040039;
        public static final int info_currRent=0x7f04002d;
        public static final int info_price=0x7f040034;
        public static final int info_priceIcon=0x7f04002e;
        public static final int info_rent=0x7f04003c;
        public static final int info_rentStar1=0x7f04003d;
        public static final int info_rentStar2=0x7f04003e;
        public static final int info_rentStar3=0x7f04003f;
        public static final int info_rentStar4=0x7f040040;
        public static final int info_rentStar5=0x7f040041;
        public static final int info_star1=0x7f04002f;
        public static final int info_star2=0x7f040030;
        public static final int info_star3=0x7f040031;
        public static final int info_star4=0x7f040032;
        public static final int info_star5=0x7f040033;
        public static final int infot=0x7f040017;
        public static final int initailMoneyLable=0x7f04005c;
        public static final int initialMoneyNum=0x7f04005d;
        public static final int left=0x7f040006;
        public static final int linearLayout1=0x7f040026;
        public static final int linearLayout2=0x7f040021;
        public static final int main=0x7f040012;
        public static final int newgame=0x7f040052;
        public static final int options=0x7f040053;
        public static final int playericon=0x7f040022;
        public static final int playerinfo=0x7f040068;
        public static final int playermoney=0x7f040023;
        public static final int playersCountLable=0x7f04005a;
        public static final int playersNum=0x7f04005b;
        public static final int priceText=0x7f040027;
        public static final int progressBar=0x7f040067;
        public static final int progressMessage=0x7f040066;
        public static final int reset=0x7f040065;
        public static final int resume=0x7f040051;
        public static final int returntogame=0x7f040056;
        public static final int right=0x7f040007;
        public static final int scrollView1=0x7f040057;
        public static final int sellt_build=0x7f040015;
        public static final int start=0x7f040010;
        public static final int textView1=0x7f040069;
        public static final int themeLable=0x7f040058;
        public static final int theme_filename=0x7f04006a;
        public static final int theme_progressBar=0x7f04006b;
        public static final int themeprogress_cancel=0x7f04006c;
        public static final int themespiner=0x7f040059;
        public static final int titletext=0x7f040050;
        public static final int top=0x7f040004;
        public static final int trade=0x7f040060;
        public static final int tradebutton=0x7f04006f;
        public static final int tradeprice=0x7f04006e;
        public static final int tradet=0x7f040016;
        public static final int tunsLeftLable=0x7f040045;
        public static final int turnMessagesHolder=0x7f040072;
        public static final int turnmessage=0x7f040070;
        public static final int turnsInPrisonLeft=0x7f040043;
        public static final int undo=0x7f04001d;
        public static final int undo_hint=0x7f040064;
        public static final int undocount=0x7f040063;
        public static final int undolabel=0x7f040062;
        public static final int vertical=0x7f040001;
        public static final int vpanel1=0x7f04004c;
        public static final int vpanel2=0x7f04004d;
        public static final int vpanel3=0x7f04004e;
        public static final int vpanel4=0x7f04004f;
        public static final int webview=0x7f04004a;
    }
    public static final class layout {
        public static final int board=0x7f030000;
        public static final int buydialog=0x7f030001;
        public static final int cellinfodialog=0x7f030002;
        public static final int exitprison=0x7f030003;
        public static final int godialog=0x7f030004;
        public static final int help=0x7f030005;
        public static final int infodialog=0x7f030006;
        public static final int menu=0x7f030007;
        public static final int options=0x7f030008;
        public static final int progressdialog=0x7f030009;
        public static final int sale_builddialog=0x7f03000a;
        public static final int splash=0x7f03000b;
        public static final int themeprogress=0x7f03000c;
        public static final int tradedialog=0x7f03000d;
        public static final int turminfoline=0x7f03000e;
        public static final int turnreport=0x7f03000f;
    }
    public static final class string {
        public static final int app_name=0x7f070000;
        public static final int buy=0x7f070008;
        public static final int cardsleft=0x7f07000d;
        public static final int exit=0x7f070007;
        public static final int exitprison=0x7f07000c;
        public static final int help=0x7f07000b;
        public static final int newgame=0x7f070004;
        public static final int options=0x7f070006;
        public static final int playerscount=0x7f07000e;
        public static final int reset=0x7f07000a;
        public static final int resume=0x7f070005;
        public static final int returnToGame=0x7f070009;
        public static final int sell=0x7f070001;
        public static final int theme_filename=0x7f07000f;
        public static final int title=0x7f070003;
        public static final int trade=0x7f070002;
    }
    public static final class style {
        public static final int FullHeightDialog=0x7f090000;
    }
    public static final class styleable {
        /** Attributes that can be used with a GridLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_alignmentMode my.monopoly:alignmentMode}</code></td><td>
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins.</td></tr>
           <tr><td><code>{@link #GridLayout_columnCount my.monopoly:columnCount}</code></td><td> The maximum number of columns to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_columnOrderPreserved my.monopoly:columnOrderPreserved}</code></td><td>
        When set to true, forces column boundaries to appear in the same order
        as column indices.</td></tr>
           <tr><td><code>{@link #GridLayout_orientation my.monopoly:orientation}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_rowCount my.monopoly:rowCount}</code></td><td> The maximum number of rows to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_rowOrderPreserved my.monopoly:rowOrderPreserved}</code></td><td>
        When set to true, forces row boundaries to appear in the same order
        as row indices.</td></tr>
           <tr><td><code>{@link #GridLayout_useDefaultMargins my.monopoly:useDefaultMargins}</code></td><td>
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.</td></tr>
           </table>
           @see #GridLayout_alignmentMode
           @see #GridLayout_columnCount
           @see #GridLayout_columnOrderPreserved
           @see #GridLayout_orientation
           @see #GridLayout_rowCount
           @see #GridLayout_rowOrderPreserved
           @see #GridLayout_useDefaultMargins
         */
        public static final int[] GridLayout = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006
        };
        /**
          <p>
          @attr description
          
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:alignmentMode
        */
        public static final int GridLayout_alignmentMode = 4;
        /**
          <p>
          @attr description
           The maximum number of columns to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:columnCount
        */
        public static final int GridLayout_columnCount = 2;
        /**
          <p>
          @attr description
          
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:columnOrderPreserved
        */
        public static final int GridLayout_columnOrderPreserved = 6;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:orientation
        */
        public static final int GridLayout_orientation = 0;
        /**
          <p>
          @attr description
           The maximum number of rows to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rowCount
        */
        public static final int GridLayout_rowCount = 1;
        /**
          <p>
          @attr description
          
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rowOrderPreserved
        */
        public static final int GridLayout_rowOrderPreserved = 5;
        /**
          <p>
          @attr description
          
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:useDefaultMargins
        */
        public static final int GridLayout_useDefaultMargins = 3;
        /** Attributes that can be used with a GridLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_height my.monopoly:android_layout_height}</code></td><td></td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_margin my.monopoly:android_layout_margin}</code></td><td>
              Specifies extra space on the left, top, right and bottom
              sides of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginBottom my.monopoly:android_layout_marginBottom}</code></td><td>
              Specifies extra space on the bottom side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginLeft my.monopoly:android_layout_marginLeft}</code></td><td>
              Specifies extra space on the left side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginRight my.monopoly:android_layout_marginRight}</code></td><td>
              Specifies extra space on the right side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginTop my.monopoly:android_layout_marginTop}</code></td><td>
              Specifies extra space on the top side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_width my.monopoly:android_layout_width}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_column my.monopoly:layout_column}</code></td><td>
        The column boundary delimiting the left of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_columnSpan my.monopoly:layout_columnSpan}</code></td><td>
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_gravity my.monopoly:layout_gravity}</code></td><td>
        Gravity specifies how a component should be placed in its group of cells.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_row my.monopoly:layout_row}</code></td><td> END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_rowSpan my.monopoly:layout_rowSpan}</code></td><td>
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           </table>
           @see #GridLayout_Layout_android_layout_height
           @see #GridLayout_Layout_android_layout_margin
           @see #GridLayout_Layout_android_layout_marginBottom
           @see #GridLayout_Layout_android_layout_marginLeft
           @see #GridLayout_Layout_android_layout_marginRight
           @see #GridLayout_Layout_android_layout_marginTop
           @see #GridLayout_Layout_android_layout_width
           @see #GridLayout_Layout_layout_column
           @see #GridLayout_Layout_layout_columnSpan
           @see #GridLayout_Layout_layout_gravity
           @see #GridLayout_Layout_layout_row
           @see #GridLayout_Layout_layout_rowSpan
         */
        public static final int[] GridLayout_Layout = {
            0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7,
            0x010100f8, 0x010100f9, 0x010100fa, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b
        };
        /**
          <p>This symbol is the offset where the {@link my.monopoly.R.attr#android_layout_height}
          attribute's value can be found in the {@link #GridLayout_Layout} array.
          @attr name android:android_layout_height
        */
        public static final int GridLayout_Layout_android_layout_height = 1;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link my.monopoly.R.attr#android_layout_margin}.
          @attr name android:android_layout_margin
        */
        public static final int GridLayout_Layout_android_layout_margin = 2;
        /**
          <p>
          @attr description
          
              Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link my.monopoly.R.attr#android_layout_marginBottom}.
          @attr name android:android_layout_marginBottom
        */
        public static final int GridLayout_Layout_android_layout_marginBottom = 6;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link my.monopoly.R.attr#android_layout_marginLeft}.
          @attr name android:android_layout_marginLeft
        */
        public static final int GridLayout_Layout_android_layout_marginLeft = 3;
        /**
          <p>
          @attr description
          
              Specifies extra space on the right side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link my.monopoly.R.attr#android_layout_marginRight}.
          @attr name android:android_layout_marginRight
        */
        public static final int GridLayout_Layout_android_layout_marginRight = 5;
        /**
          <p>
          @attr description
          
              Specifies extra space on the top side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link my.monopoly.R.attr#android_layout_marginTop}.
          @attr name android:android_layout_marginTop
        */
        public static final int GridLayout_Layout_android_layout_marginTop = 4;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in MarginLayout are
              redefined in the support library name space.
        
 START MarginLayout layoutparams 
          <p>This corresponds to the global attribute          resource symbol {@link my.monopoly.R.attr#android_layout_width}.
          @attr name android:android_layout_width
        */
        public static final int GridLayout_Layout_android_layout_width = 0;
        /**
          <p>
          @attr description
          
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_column
        */
        public static final int GridLayout_Layout_layout_column = 9;
        /**
          <p>
          @attr description
          
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_columnSpan
        */
        public static final int GridLayout_Layout_layout_columnSpan = 10;
        /**
          <p>
          @attr description
          
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:layout_gravity
        */
        public static final int GridLayout_Layout_layout_gravity = 11;
        /**
          <p>
          @attr description
           END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_row
        */
        public static final int GridLayout_Layout_layout_row = 7;
        /**
          <p>
          @attr description
          
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_rowSpan
        */
        public static final int GridLayout_Layout_layout_rowSpan = 8;
    };
}
